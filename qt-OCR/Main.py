# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Main.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import sys
import os
import tkinter.filedialog
from PyQt5 import *
from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
from PyQt5.QtGui import *
import requests
import base64
import urllib
import urllib.request
import json
import res


root = tkinter.Tk()    # 创建一个Tkinter.Tk()实例
root.withdraw()


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 597)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.lab_ImgDisplay = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lab_ImgDisplay.sizePolicy().hasHeightForWidth())
        self.lab_ImgDisplay.setSizePolicy(sizePolicy)
        self.lab_ImgDisplay.setObjectName("lab_ImgDisplay")
        self.gridLayout.addWidget(self.lab_ImgDisplay, 0, 0, 3, 1)
        self.btn_OpenFile = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_OpenFile.sizePolicy().hasHeightForWidth())
        self.btn_OpenFile.setSizePolicy(sizePolicy)
        self.btn_OpenFile.setObjectName("btn_OpenFile")
        self.gridLayout.addWidget(self.btn_OpenFile, 0, 1, 1, 1)
        self.btn_ScanFile = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_ScanFile.sizePolicy().hasHeightForWidth())
        self.btn_ScanFile.setSizePolicy(sizePolicy)
        self.btn_ScanFile.setObjectName("btn_ScanFile")
        self.gridLayout.addWidget(self.btn_ScanFile, 1, 1, 1, 1)
        self.btn_ShowScan = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_ShowScan.sizePolicy().hasHeightForWidth())
        self.btn_ShowScan.setSizePolicy(sizePolicy)
        self.btn_ShowScan.setObjectName("btn_ShowScan")
        self.gridLayout.addWidget(self.btn_ShowScan, 2, 1, 1, 1)
        self.horizontalLayout.addLayout(self.gridLayout)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 23))
        self.menubar.setObjectName("menubar")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.action = QtWidgets.QAction(MainWindow)
        self.action.setObjectName("action")
        self.action_3 = QtWidgets.QAction(MainWindow)
        self.action_3.setObjectName("action_3")
        self.action_2 = QtWidgets.QAction(MainWindow)
        self.action_2.setObjectName("action_2")
        self.menu.addAction(self.action)
        self.menu.addAction(self.action_2)
        self.menu.addSeparator()
        self.menu.addAction(self.action_3)
        self.menubar.addAction(self.menu.menuAction())
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowIcon(QIcon(":main-ico.ico"))
        MainWindow.setWindowTitle(_translate("MainWindow", "OCR识别工具"))
        self.lab_ImgDisplay.setText(_translate("MainWindow", ""))
        self.btn_OpenFile.setText(_translate("MainWindow", "打开文件"))
        self.btn_ScanFile.setText(_translate("MainWindow", "识别"))
        self.btn_ShowScan.setText(_translate("MainWindow", "显示识别结果"))
        self.menu.setTitle(_translate("MainWindow", "文件"))
        self.action.setText(_translate("MainWindow", "首选项"))
        self.action_2.setText(_translate("MainWindow", "设置扫描格式"))
        self.action_3.setText(_translate("MainWindow", "退出"))
        self.action.triggered.connect(self.showoption)
        self.action_3.triggered.connect(self.quit)
        self.btn_OpenFile.clicked.connect(self.openFile)
        self.btn_ScanFile.clicked.connect(self.startScan)
        self.btn_ShowScan.clicked.connect(self.showScan)

    def quit(self):
        exit(0)

    def showScan(self):
        Over.show()

    def startScan(self):
        if os.path.isfile('OCRIMGPATH.INI') == False:
            QDialog = QtWidgets.QMessageBox.warning(MainWindow, '注意', '请先打开文件!')
            return
        self.scanFile(self.get_token())

    def get_token(self):
        f = open("OCROPTION.INI","r")
        ct = f.readlines()
        AK1 = ct[0]
        SK1 = ct[1]
        AK = str(AK1).replace("\n","")
        SK = str(SK1).replace("\n","")
        f.close()
        # client_id 为官网获取的AK， client_secret 为官网获取的SK
        host = 'https://aip.baidubce.com/oauth/2.0/token?grant_type=client_credentials&client_id=' + AK + '&client_secret=' + SK
        # 发送请求
        request = urllib.request.Request(host)
        # 添加请求头
        request.add_header('Content-Type', 'application/json; charset=UTF-8')
        # 获取返回内容
        response = urllib.request.urlopen(request)
        # 读取返回内容
        content = response.read()
        # 判断内容是否为空
        if (content):
            # 使用json解析出token 设置token
            self.access_token = json.loads(content)['access_token']
            # 返回token
            return self.access_token

    def scanFile(self,access_token):
        f = open("OCRIMGPATH.INI","r")
        Imgpath = f.read()
        f.close()
        request_url = "https://aip.baidubce.com/rest/2.0/ocr/v1/general_basic"
        # 二进制方式打开图片文件
        f = open(Imgpath, 'rb')
        img = base64.b64encode(f.read())
        params = {"image":img}
        params = urllib.parse.urlencode(params).encode('utf-8')
        request_url = request_url + "?access_token=" + access_token
        request = urllib.request.Request(url=request_url, data=params)
        request.add_header('Content-Type', 'application/x-www-form-urlencoded')
        response = urllib.request.urlopen(request)
        content = response.read()
        if content:
            text = json.loads(content)
            lenth = len(text['words_result'])
            list1 = text['words_result']
            i = 0
            list2 = list()
            while True:
                cont = list1[i]
                cont1 = cont['words']
                append = list2.append(cont1)
                i = i + 1
                if i == lenth:
                    break
            res = '\n'
            f = open("res.txt","w")
            f.write(res.join(list2))
            f.close()
            QDialog = QtWidgets.QMessageBox.information(MainWindow, '提示', '识别成功！')

    def showoption(self):
        Option.show()

    def openFile(self):
        if os.path.isfile("OCROPTION.INI") == False:
            QDialog = QtWidgets.QMessageBox.warning(MainWindow, '注意', '请设置百度API!')
            return
        else:
            f = open("OCROPTION.INI","r")
            a = f.read()
            if a == '':
                QDialog = QtWidgets.QMessageBox.warning(MainWindow, '注意', '设置的百度API为空！')
                return
        Imgpath = tkinter.filedialog.askopenfilename(title=u'打开要识别的图片',filetypes=[('PNG','.png'), ('JPG','.jpg')],defaultextension='png')
        if Imgpath == '':
            QDialog = QtWidgets.QMessageBox.warning(MainWindow, '警告', '打开的目录不能为空！')
        else:
            Img = QPixmap(Imgpath)
            scaredImg = Img.scaled(QSize(694,532), aspectRatioMode=Qt.KeepAspectRatio)
            self.lab_ImgDisplay.setPixmap(scaredImg)
            f = open("OCRIMGPATH.INI","w")
            f.write(Imgpath)
            f.close()

class Ui_OptionWindow(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(524, 420)
        self.verticalLayout = QtWidgets.QVBoxLayout(Form)
        self.verticalLayout.setObjectName("verticalLayout")
        self.lineEdit = QtWidgets.QLineEdit(Form)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit.sizePolicy().hasHeightForWidth())
        self.lineEdit.setSizePolicy(sizePolicy)
        self.lineEdit.setStyleSheet("font: 72pt;")
        self.lineEdit.setObjectName("lineEdit")
        self.verticalLayout.addWidget(self.lineEdit)
        self.lineEdit_2 = QtWidgets.QLineEdit(Form)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit_2.sizePolicy().hasHeightForWidth())
        self.lineEdit_2.setSizePolicy(sizePolicy)
        self.lineEdit_2.setStyleSheet("font: 72pt;")
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.verticalLayout.addWidget(self.lineEdit_2)
        self.btn_save = QtWidgets.QPushButton(Form)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_save.sizePolicy().hasHeightForWidth())
        self.btn_save.setSizePolicy(sizePolicy)
        self.btn_save.setStyleSheet("font: 72pt;")
        self.btn_save.setObjectName("btn_save")
        self.verticalLayout.addWidget(self.btn_save)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "首选项"))
        self.lineEdit.setPlaceholderText(_translate("Form", "APIKEY"))
        self.lineEdit_2.setPlaceholderText(_translate("Form", "SECRETKEY"))
        self.btn_save.setText(_translate("Form", "保存"))
        self.btn_save.clicked.connect(self.saveKey)
        Option.setWindowIcon(QIcon(":main-ico.ico"))

    def saveKey(self):
        APIKEY = self.lineEdit.text()
        SECRETKEY = self.lineEdit_2.text()
        seq = [APIKEY + '\n',SECRETKEY]
        optionfile = open("OCROPTION.INI","w")
        optionfile.writelines(seq)
        optionfile.close()

class Ui_OverWindow(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(699, 604)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(Form)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.pushButton = QtWidgets.QPushButton(Form)
        self.pushButton.setStyleSheet("font: 48pt \"Agency FB\";")
        self.pushButton.setObjectName("pushButton")
        self.verticalLayout.addWidget(self.pushButton)
        self.textEdit = QtWidgets.QTextEdit(Form)
        self.textEdit.setObjectName("textEdit")
        self.verticalLayout.addWidget(self.textEdit)
        self.btn_copy = QtWidgets.QPushButton(Form)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_copy.sizePolicy().hasHeightForWidth())
        self.btn_copy.setSizePolicy(sizePolicy)
        self.btn_copy.setStyleSheet("font: 48pt \"Adobe Devanagari\";")
        self.btn_copy.setObjectName("btn_copy")
        self.verticalLayout.addWidget(self.btn_copy)
        self.verticalLayout_2.addLayout(self.verticalLayout)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "识别结果"))
        self.btn_copy.setText(_translate("Form", "复制到剪贴板"))
        self.pushButton.setText(_translate("Form", "读取"))
        self.pushButton.clicked.connect(self.read)
        self.btn_copy.clicked.connect(self.copy)
        Over.setWindowIcon(QIcon(":main-ico.ico"))

    def copy(self):
        clipboard = QApplication.clipboard()
        clipboard.setText(self.textEdit.toPlainText())

    def read(self):
        fl = open('res.txt','r')
        ct = fl.read()
        fl.close()
        self.textEdit.setText(ct)



if __name__ == '__main__':   #程序主方法
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    MainWindowUi = Ui_MainWindow()
    MainWindowUi.setupUi(MainWindow)
    MainWindow.show()
    Over = QtWidgets.QWidget()
    OverUi = Ui_OverWindow()
    OverUi.setupUi(Over)
    Option = QtWidgets.QWidget()
    OptionUi = Ui_OptionWindow()
    OptionUi.setupUi(Option)
    sys.exit(app.exec_())